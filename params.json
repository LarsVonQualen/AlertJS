{"name":"AlertJS","tagline":"Easy javascript notification and alert system.","body":"# AlertJS\r\n\r\nEasy javascript notification and alert system.\r\n\r\n# Features\r\n- Custom modal alerts.\r\n- Notifications popping up in the bottom right corner.\r\n- Notifications popping down from the top of the page.\r\n- Pre DOM ready queue, that fires at DOM ready.\r\n- Four different notification sounds.\r\n\r\n# Example\r\nAn example page can be found here: http://larsvonqualen.github.io/AlertJS/example/\r\n\r\n# How To\r\n\r\nThe library is very simple to use. Make sure you include the css in the header, and the javascript in the end of the `<body>` tag AFTER jQuery, and you are ready to pop some notifications or alerts!\r\n\r\nIn order to show a notification, simply use one of the following calls, with the appropriate type:\r\n\r\n\tAlertJS.Notify.Info(\"Some Title\", \"Some informational message.\");\r\n\tAlertJS.Notify.Warning(\"Some Title\", \"Some warning message.\");\r\n\tAlertJS.Notify.Error(\"Some Title\", \"Some error message.\");\r\n\tAlertJS.Notify.Success(\"Some Title\", \"Some success message.\");\r\n    \r\nIf you want the notification to come down from the top, you simply call the library like this:\r\n\r\n\tAlertJS.Notify.Top.Info(\"Some Title\", \"Some informational message.\");\r\n\tAlertJS.Notify.Top.Warning(\"Some Title\", \"Some warning message.\");\r\n\tAlertJS.Notify.Top.Error(\"Some Title\", \"Some error message.\");\r\n\tAlertJS.Notify.Top.Success(\"Some Title\", \"Some success message.\");\r\n\r\nIf you want to show a modal alert, you simply make one of the following calls:\r\n\r\n\tAlertJS.Alert.Info(\"Some Title\", \"Some informational message.\");\r\n\tAlertJS.Alert.Warning(\"Some Title\", \"Some warning message.\");\r\n\tAlertJS.Alert.Error(\"Some Title\", \"Some error message.\");\r\n\tAlertJS.Alert.Success(\"Some Title\", \"Some success message.\");\r\n    \r\n# Sound\r\nThe lib supports playing four different sounds, according to each notification type. The sound is activated either through global settings:\r\n    \r\n    AlertJS.setSetting(\"sound\", true);\r\n    \r\nor by adding a boolean value to the notification call, like so:\r\n\r\n    AlertJS.Notify.Info(\"Some Title\", \"Some informational message.\", true);\r\n    \r\nIn order to include actual sound data either include the `alertjs.sounds.js` file, or inject base64 encoded data or url's into the appropriate setting like this:\r\n\r\n    AlertJS.setSetting(\"sounds\", {\r\n        error: {\r\n            mp3: \"base64_encoded_data\",\r\n            ogg: \"http://some.url.com\"\r\n        }\r\n    });\r\n    \r\nThis can be done for all four alert types: `error`, `info`, `warning`, `success`. If in doubt, look in the `alertjs.sounds.js` file.\r\n\r\nFor further details, check of the example.html file.\r\n\r\n# Dependencies\r\n* jQuery (only tested with 2.0.3)\r\n\r\n# Credits\r\n- A big thanks goes to Lauritz Munch (https://soundcloud.com/main-pitch) who made the four awesome sounds!","google":"UA-45553709-1","note":"Don't delete this file! It's used internally to help with page regeneration."}